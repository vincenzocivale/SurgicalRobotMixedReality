//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SofaSurgical
{
    [Serializable]
    public class OrganMsg : Message
    {
        public const string k_RosMessageName = "sofa_surgical_msgs/Organ";
        public override string RosMessageName => k_RosMessageName;

        //  Organ.msg
        public string id;
        //  ID dell'organo
        public Shape.MeshMsg surface;
        //  Mesh triangolare (superficie)
        public TetrahedralMeshMsg tetrahedral_mesh;
        //  Mesh tetraedrica (volume)
        public Geometry.PoseMsg pose;
        //  Posizione e orientamento dell'organo

        public OrganMsg()
        {
            this.id = "";
            this.surface = new Shape.MeshMsg();
            this.tetrahedral_mesh = new TetrahedralMeshMsg();
            this.pose = new Geometry.PoseMsg();
        }

        public OrganMsg(string id, Shape.MeshMsg surface, TetrahedralMeshMsg tetrahedral_mesh, Geometry.PoseMsg pose)
        {
            this.id = id;
            this.surface = surface;
            this.tetrahedral_mesh = tetrahedral_mesh;
            this.pose = pose;
        }

        public static OrganMsg Deserialize(MessageDeserializer deserializer) => new OrganMsg(deserializer);

        private OrganMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id);
            this.surface = Shape.MeshMsg.Deserialize(deserializer);
            this.tetrahedral_mesh = TetrahedralMeshMsg.Deserialize(deserializer);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.id);
            serializer.Write(this.surface);
            serializer.Write(this.tetrahedral_mesh);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "OrganMsg: " +
            "\nid: " + id.ToString() +
            "\nsurface: " + surface.ToString() +
            "\ntetrahedral_mesh: " + tetrahedral_mesh.ToString() +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
