//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SofaSurgical
{
    [Serializable]
    public class TetrahedralMeshMsg : Message
    {
        public const string k_RosMessageName = "sofa_surgical_msgs/TetrahedralMesh";
        public override string RosMessageName => k_RosMessageName;

        //  TetraMesh.msg
        public Geometry.Point32Msg[] vertices;
        public TetrahedronMsg[] tetrahedrons;
        //  Lista dei tetraedri che compongono la mesh

        public TetrahedralMeshMsg()
        {
            this.vertices = new Geometry.Point32Msg[0];
            this.tetrahedrons = new TetrahedronMsg[0];
        }

        public TetrahedralMeshMsg(Geometry.Point32Msg[] vertices, TetrahedronMsg[] tetrahedrons)
        {
            this.vertices = vertices;
            this.tetrahedrons = tetrahedrons;
        }

        public static TetrahedralMeshMsg Deserialize(MessageDeserializer deserializer) => new TetrahedralMeshMsg(deserializer);

        private TetrahedralMeshMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.vertices, Geometry.Point32Msg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.tetrahedrons, TetrahedronMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.vertices);
            serializer.Write(this.vertices);
            serializer.WriteLength(this.tetrahedrons);
            serializer.Write(this.tetrahedrons);
        }

        public override string ToString()
        {
            return "TetrahedralMeshMsg: " +
            "\nvertices: " + System.String.Join(", ", vertices.ToList()) +
            "\ntetrahedrons: " + System.String.Join(", ", tetrahedrons.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
